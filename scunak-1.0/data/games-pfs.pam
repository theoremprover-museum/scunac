gamesPair:=(\x0 x1.cartprodmempair x0 x0 <x1,subsetE (dpsetconstr x0 x0 (\x2 x3.(forall x4:(powerset (x0 \times x0)) . ((forall x5:((powerset x4) \cap x0) . (forall x6:((powerset x4) \cap x0) . (<<x5,x6>>::x4))) => (<<x2,x3>>::x4))))) (x0 \times x0) x1 (dpsetconstrSub x0 x0 (\x2 x3.(forall x4:(powerset (x0 \times x0)) . ((forall x5:((powerset x4) \cap x0) . (forall x6:((powerset x4) \cap x0) . (<<x5,x6>>::x4))) => (<<x2,x3>>::x4))))) (equivEimp2 (x1::(dpsetconstr x0 x0 (\x2 x3.(forall x4:(powerset (x0 \times x0)) . ((forall x5:((powerset x4) \cap x0) . (forall x6:((powerset x4) \cap x0) . (<<x5,x6>>::x4))) => (<<x2,x3>>::x4)))))) (x1::(games x0)) (in#Cong (dpsetconstr x0 x0 (\x2 x3.(forall x4:(powerset (x0 \times x0)) . ((forall x5:((powerset x4) \cap x0) . (forall x6:((powerset x4) \cap x0) . (<<x5,x6>>::x4))) => (<<x2,x3>>::x4))))) (games x0) (symeq (games x0) (dpsetconstr x0 x0 (\x2 x3.(forall x4:(powerset (x0 \times x0)) . ((forall x5:((powerset x4) \cap x0) . (forall x6:((powerset x4) \cap x0) . (<<x5,x6>>::x4))) => (<<x2,x3>>::x4))))) (games#Eq x0)) x1 x1 (eqI x1)) x1)>).
gamesetInU2:=(\x0 x1.binintersectER (powerset (games x0)) x0 x1 (equivEimp2 (x1::((powerset (games x0)) \cap x0)) (x1::(gameset x0)) (in#Cong ((powerset (games x0)) \cap x0) (gameset x0) (symeq (gameset x0) ((powerset (games x0)) \cap x0) (gameset#Eq x0)) x1 x1 (eqI x1)) x1)).
gamesetInPG:=(\x0 x1.binintersectEL (powerset (games x0)) x0 x1 (equivEimp2 (x1::((powerset (games x0)) \cap x0)) (x1::(gameset x0)) (in#Cong ((powerset (games x0)) \cap x0) (gameset x0) (symeq (gameset x0) ((powerset (games x0)) \cap x0) (gameset#Eq x0)) x1 x1 (eqI x1)) x1)).
gamesLeastSet:=(\x0 x1 x2.subsetI1 (games x0) x1 (\x3.equivEimp1 (<<(kfst <x3,gamesPair x0 x3>),(ksnd <x3,gamesPair x0 x3>)>>::x1) (x3::x1) (in#Cong x1 x1 (eqI x1) <<(kfst <x3,gamesPair x0 x3>),(ksnd <x3,gamesPair x0 x3>)>> x3 (kpairsurjEq <x3,gamesPair x0 x3>)) (impE (forall x4:((powerset x1) \cap x0) . (forall x5:((powerset x1) \cap x0) . (<<x4,x5>>::x1))) (<<(kfst <x3,gamesPair x0 x3>),(ksnd <x3,gamesPair x0 x3>)>>::x1) (dallE (powerset (x0 \times x0)) (\x4.((forall x5:((powerset x4) \cap x0) . (forall x6:((powerset x4) \cap x0) . (<<x5,x6>>::x4))) => (<<(kfst <x3,gamesPair x0 x3>),(ksnd <x3,gamesPair x0 x3>)>>::x4))) (dpsetconstrER x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))) (kfst <x3,gamesPair x0 x3>) (ksnd <x3,gamesPair x0 x3>) (equivEimp1 (x3::(dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) (<<(kfst <x3,gamesPair x0 x3>),(ksnd <x3,gamesPair x0 x3>)>>::(dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) (in#Cong (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (eqI (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) x3 <<(kfst <x3,gamesPair x0 x3>),(ksnd <x3,gamesPair x0 x3>)>> (symeq <<(kfst <x3,gamesPair x0 x3>),(ksnd <x3,gamesPair x0 x3>)>> x3 (kpairsurjEq <x3,gamesPair x0 x3>))) (equivEimp2 (x3::(dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) (x3::(games x0)) (in#Cong (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (games x0) (symeq (games x0) (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (games#Eq x0)) x3 x3 (eqI x3)) x3))) x1) x2))).
gamesConspLem:=(\x0 x1 x2 x3.binintersectI (powerset x2) x0 x1 (powersetI x2 x1 (\x4 x5.subsetE (games x0) x2 x4 (gamesLeastSet x0 x2 x3) (powersetE (games x0) x1 x4 (binintersectEL (powerset (games x0)) x0 x1 (equivEimp1 (x1::(gameset x0)) (x1::((powerset (games x0)) \cap x0)) (in#Cong (gameset x0) ((powerset (games x0)) \cap x0) (gameset#Eq x0) x1 x1 (eqI x1)) x1)) x5))) (gamesetInU2 x0 x1)).
gamesConsp:=(\x0 x1 x2.equivEimp1 (<<x1,x2>>::(dpsetconstr x0 x0 (\x3 x4.(forall x5:(powerset (x0 \times x0)) . ((forall x6:((powerset x5) \cap x0) . (forall x7:((powerset x5) \cap x0) . (<<x6,x7>>::x5))) => (<<x3,x4>>::x5)))))) (<<x1,x2>>::(games x0)) (in#Cong (dpsetconstr x0 x0 (\x3 x4.(forall x5:(powerset (x0 \times x0)) . ((forall x6:((powerset x5) \cap x0) . (forall x7:((powerset x5) \cap x0) . (<<x6,x7>>::x5))) => (<<x3,x4>>::x5))))) (games x0) (symeq (games x0) (dpsetconstr x0 x0 (\x3 x4.(forall x5:(powerset (x0 \times x0)) . ((forall x6:((powerset x5) \cap x0) . (forall x7:((powerset x5) \cap x0) . (<<x6,x7>>::x5))) => (<<x3,x4>>::x5))))) (games#Eq x0)) <<x1,x2>> <<x1,x2>> (eqI <<x1,x2>>)) (dpsetconstrI x0 x0 (\x3 x4.(forall x5:(powerset (x0 \times x0)) . ((forall x6:((powerset x5) \cap x0) . (forall x7:((powerset x5) \cap x0) . (<<x6,x7>>::x5))) => (<<x3,x4>>::x5)))) <x1,gamesetInU2 x0 x1> <x2,gamesetInU2 x0 x2> (dallI (powerset (x0 \times x0)) (\x3.((forall x4:((powerset x3) \cap x0) . (forall x5:((powerset x3) \cap x0) . (<<x4,x5>>::x3))) => (<<x1,x2>>::x3))) (\x3.impI (forall x4:((powerset x3) \cap x0) . (forall x5:((powerset x3) \cap x0) . (<<x4,x5>>::x3))) (<<x1,x2>>::x3) (\x4.dallE ((powerset x3) \cap x0) (\x5.(<<x1,x5>>::x3)) (dallE ((powerset x3) \cap x0) (\x5.(forall x6:((powerset x3) \cap x0) . (<<x5,x6>>::x3))) x4 <x1,gamesConspLem x0 x1 x3 x4>) <x2,gamesConspLem x0 x2 x3 x4>))))).
gameInGSCP:=(\x0 x1.subsetE (games x0) ((gameset x0) \times (gameset x0)) x1 (gamesLeastSet x0 <((gameset x0) \times (gameset x0)),powersetI (x0 \times x0) ((gameset x0) \times (gameset x0)) (\x2 x3.dexE (gameset x0) (\x4.(exists x5:(gameset x0) . (x2==<<x4,x5>>))) (cartprodmempair1 (gameset x0) (gameset x0) <x2,x3>) (x2::(x0 \times x0)) (\x4 x5.dexE (gameset x0) (\x6.(x2==<<x4,x6>>)) x5 (x2::(x0 \times x0)) (\x6 x7.equivEimp1 (<<x4,x6>>::(x0 \times x0)) (x2::(x0 \times x0)) (in#Cong (x0 \times x0) (x0 \times x0) (eqI (x0 \times x0)) <<x4,x6>> x2 (symeq x2 <<x4,x6>> x7)) (cartprodpairin x0 x0 <x4,gamesetInU2 x0 x4> <x6,gamesetInU2 x0 x6>))))> (dallI ((powerset ((gameset x0) \times (gameset x0))) \cap x0) (\x2.(forall x3:((powerset ((gameset x0) \times (gameset x0))) \cap x0) . (<<x2,x3>>::((gameset x0) \times (gameset x0))))) (\x2.dallI ((powerset ((gameset x0) \times (gameset x0))) \cap x0) (\x3.(<<x2,x3>>::((gameset x0) \times (gameset x0)))) (\x3.cartprodpairin (gameset x0) (gameset x0) <x2,gameInGSCPLem x0 x2> <x3,gameInGSCPLem x0 x3>)))) x1).
gameInGSCPLem:=(\x0 x1.equivEimp1 (x1::((powerset (games x0)) \cap x0)) (x1::(gameset x0)) (in#Cong ((powerset (games x0)) \cap x0) (gameset x0) (symeq (gameset x0) ((powerset (games x0)) \cap x0) (gameset#Eq x0)) x1 x1 (eqI x1)) (binintersectI (powerset (games x0)) x0 x1 (powersetI (games x0) x1 (\x2 x3.dexE (gameset x0) (\x4.(exists x5:(gameset x0) . (x2==<<x4,x5>>))) (cartprodmempair1 (gameset x0) (gameset x0) <x2,powersetE ((gameset x0) \times (gameset x0)) x1 x2 (binintersectEL (powerset ((gameset x0) \times (gameset x0))) x0 x1 x1) x3>) (x2::(games x0)) (\x4 x5.dexE (gameset x0) (\x6.(x2==<<x4,x6>>)) x5 (x2::(games x0)) (\x6 x7.equivEimp1 (<<x4,x6>>::(games x0)) (x2::(games x0)) (in#Cong (games x0) (games x0) (eqI (games x0)) <<x4,x6>> x2 (symeq x2 <<x4,x6>> x7)) (gamesConsp x0 x4 x6))))) (binintersectER (powerset ((gameset x0) \times (gameset x0))) x0 x1 x1))).
gamefstInGS:=(\x0 x1.dexE (gameset x0) (\x2.(exists x3:(gameset x0) . (x1==<<x2,x3>>))) (cartprodmempair1 (gameset x0) (gameset x0) <x1,gameInGSCP x0 x1>) ((kfst <x1,gamesPair x0 x1>)::(gameset x0)) (\x2 x3.dexE (gameset x0) (\x4.(x1==<<x2,x4>>)) x3 ((kfst <x1,gamesPair x0 x1>)::(gameset x0)) (\x4 x5.equivEimp1 ((kfst <<x2,x4>>)::(gameset x0)) ((kfst <x1,gamesPair x0 x1>)::(gameset x0)) (in#Cong (gameset x0) (gameset x0) (eqI (gameset x0)) (kfst <<x2,x4>>) (kfst <x1,gamesPair x0 x1>) (kfst#Cong <<x2,x4>> <x1,gamesPair x0 x1> (symeq x1 <<x2,x4>> x5))) (equivEimp1 (x2::(gameset x0)) ((kfst <<x2,x4>>)::(gameset x0)) (in#Cong (gameset x0) (gameset x0) (eqI (gameset x0)) x2 (kfst <<x2,x4>>) (symeq (kfst <<x2,x4>>) x2 (kfstpairEq x2 x4))) x2)))).
gamesndInGS:=(\x0 x1.dexE (gameset x0) (\x2.(exists x3:(gameset x0) . (x1==<<x2,x3>>))) (cartprodmempair1 (gameset x0) (gameset x0) <x1,gameInGSCP x0 x1>) ((ksnd <x1,gamesPair x0 x1>)::(gameset x0)) (\x2 x3.dexE (gameset x0) (\x4.(x1==<<x2,x4>>)) x3 ((ksnd <x1,gamesPair x0 x1>)::(gameset x0)) (\x4 x5.equivEimp1 ((ksnd <<x2,x4>>)::(gameset x0)) ((ksnd <x1,gamesPair x0 x1>)::(gameset x0)) (in#Cong (gameset x0) (gameset x0) (eqI (gameset x0)) (ksnd <<x2,x4>>) (ksnd <x1,gamesPair x0 x1>) (ksnd#Cong <<x2,x4>> <x1,gamesPair x0 x1> (symeq x1 <<x2,x4>> x5))) (equivEimp1 (x4::(gameset x0)) ((ksnd <<x2,x4>>)::(gameset x0)) (in#Cong (gameset x0) (gameset x0) (eqI (gameset x0)) x4 (ksnd <<x2,x4>>) (symeq (ksnd <<x2,x4>>) x4 (ksndpairEq x2 x4))) x4)))).
gamesSP:=(\x0 x1.equivEimp1 (x1==<<(kfst <x1,gamesPair x0 x1>),(gamesR x0 x1)>>) (x1==<<(gamesL x0 x1),(gamesR x0 x1)>>) (eq#Cong x1 x1 (eqI x1) <<(kfst <x1,gamesPair x0 x1>),(gamesR x0 x1)>> <<(gamesL x0 x1),(gamesR x0 x1)>> (kpair#Cong (kfst <x1,gamesPair x0 x1>) (gamesL x0 x1) (symeq (gamesL x0 x1) (kfst <x1,gamesPair x0 x1>) (gamesL#Eq x0 x1)) (gamesR x0 x1) (gamesR x0 x1) (eqI (gamesR x0 x1)))) (equivEimp1 (x1==<<(kfst <x1,gamesPair x0 x1>),(ksnd <x1,gamesPair x0 x1>)>>) (x1==<<(kfst <x1,gamesPair x0 x1>),(gamesR x0 x1)>>) (eq#Cong x1 x1 (eqI x1) <<(kfst <x1,gamesPair x0 x1>),(ksnd <x1,gamesPair x0 x1>)>> <<(kfst <x1,gamesPair x0 x1>),(gamesR x0 x1)>> (kpair#Cong (kfst <x1,gamesPair x0 x1>) (kfst <x1,gamesPair x0 x1>) (eqI (kfst <x1,gamesPair x0 x1>)) (ksnd <x1,gamesPair x0 x1>) (gamesR x0 x1) (symeq (gamesR x0 x1) (ksnd <x1,gamesPair x0 x1>) (gamesR#Eq x0 x1)))) (symeq <<(kfst <x1,gamesPair x0 x1>),(ksnd <x1,gamesPair x0 x1>)>> x1 (kpairsurjEq <x1,gamesPair x0 x1>)))).
Lsubgames:=(\x0 x1.subsetI1 (gamesL x0 x1) (games x0) (\x2.powersetE (games x0) (gamesL x0 x1) x2 (binintersectEL (powerset (games x0)) x0 (gamesL x0 x1) (equivEimp2 ((gamesL x0 x1)::((powerset (games x0)) \cap x0)) ((gamesL x0 x1)::(gameset x0)) (in#Cong ((powerset (games x0)) \cap x0) (gameset x0) (symeq (gameset x0) ((powerset (games x0)) \cap x0) (gameset#Eq x0)) (gamesL x0 x1) (gamesL x0 x1) (eqI (gamesL x0 x1))) (gamesL x0 x1))) x2)).
Rsubgames:=(\x0 x1.subsetI1 (gamesR x0 x1) (games x0) (\x2.powersetE (games x0) (gamesR x0 x1) x2 (binintersectEL (powerset (games x0)) x0 (gamesR x0 x1) (equivEimp2 ((gamesR x0 x1)::((powerset (games x0)) \cap x0)) ((gamesR x0 x1)::(gameset x0)) (in#Cong ((powerset (games x0)) \cap x0) (gameset x0) (symeq (gameset x0) ((powerset (games x0)) \cap x0) (gameset#Eq x0)) (gamesR x0 x1) (gamesR x0 x1) (eqI (gamesR x0 x1))) (gamesR x0 x1))) x2)).
gamesInd1:=(\x0 x1 x2 x3.dsetconstrER (games x0) x1 x3 (equivEimp1 (<<(gamesL x0 x3),(gamesR x0 x3)>>::{x4:games x0|x1 x4}) (x3::{x4:games x0|x1 x4}) (in#Cong {x4:games x0|x1 x4} {x4:games x0|x1 x4} (eqI {x4:games x0|x1 x4}) <<(gamesL x0 x3),(gamesR x0 x3)>> x3 (symeq x3 <<(gamesL x0 x3),(gamesR x0 x3)>> (gamesSP x0 x3))) (impE (forall x4:((powerset {x4:games x0|x1 x4}) \cap x0) . (forall x5:((powerset {x5:games x0|x1 x5}) \cap x0) . (<<x4,x5>>::{x6:games x0|x1 x6}))) (<<(gamesL x0 x3),(gamesR x0 x3)>>::{x4:games x0|x1 x4}) (dallE (powerset (x0 \times x0)) (\x4.((forall x5:((powerset x4) \cap x0) . (forall x6:((powerset x4) \cap x0) . (<<x5,x6>>::x4))) => (<<(gamesL x0 x3),(gamesR x0 x3)>>::x4))) (dpsetconstrER x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))) (gamesL x0 x3) (gamesR x0 x3) (equivEimp1 (x3::(dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) (<<(gamesL x0 x3),(gamesR x0 x3)>>::(dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) (in#Cong (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (eqI (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) x3 <<(gamesL x0 x3),(gamesR x0 x3)>> (gamesSP x0 x3)) (equivEimp2 (x3::(dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) (x3::(games x0)) (in#Cong (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (games x0) (symeq (games x0) (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (games#Eq x0)) x3 x3 (eqI x3)) x3))) <{x4:games x0|x1 x4},gamesInd1Lem2 x0 x1>) (dallI ((powerset {x4:games x0|x1 x4}) \cap x0) (\x4.(forall x5:((powerset {x5:games x0|x1 x5}) \cap x0) . (<<x4,x5>>::{x6:games x0|x1 x6}))) (\x4.dallI ((powerset {x5:games x0|x1 x5}) \cap x0) (\x5.(<<x4,x5>>::{x6:games x0|x1 x6})) (\x5.dsetconstrI (games x0) x1 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>> (x2 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>> (dallI (gamesL x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (\x6.x1 <x6,subsetE (gamesL x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (games x0) x6 (Lsubgames x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) x6>) (\x6.dsetconstrER (games x0) x1 x6 (powersetE {x7:games x0|x1 x7} x4 x6 (binintersectEL (powerset {x7:games x0|x1 x7}) x0 x4 x4) (equivEimp1 (x6::(kfst <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>)) (x6::x4) (in#Cong (kfst <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>) x4 (kfstpairEq x4 x5) x6 x6 (eqI x6)) (equivEimp2 (x6::(kfst <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>)) (x6::(gamesL x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>)) (in#Cong (kfst <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>) (gamesL x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (symeq (gamesL x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (kfst <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>) (gamesL#Eq x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>)) x6 x6 (eqI x6)) x6))))) (dallI (gamesR x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (\x6.x1 <x6,subsetE (gamesR x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (games x0) x6 (Rsubgames x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) x6>) (\x6.dsetconstrER (games x0) x1 x6 (powersetE {x7:games x0|x1 x7} x5 x6 (binintersectEL (powerset {x7:games x0|x1 x7}) x0 x5 x5) (equivEimp1 (x6::(ksnd <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>)) (x6::x5) (in#Cong (ksnd <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>) x5 (ksndpairEq x4 x5) x6 x6 (eqI x6)) (equivEimp2 (x6::(ksnd <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>)) (x6::(gamesR x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>)) (in#Cong (ksnd <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>) (gamesR x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (symeq (gamesR x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>) (ksnd <<<x4,x5>>,gamesPair x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>>) (gamesR#Eq x0 <<<x4,x5>>,gamesConsp x0 <x4,gamesInd1Lem1 x0 x1 x4> <x5,gamesInd1Lem1 x0 x1 x5>>)) x6 x6 (eqI x6)) x6)))))))))))).
gamesInd1Lem2:=(\x0 x1.powersetI (x0 \times x0) {x2:games x0|x1 x2} (\x2 x3.subsetE (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (x0 \times x0) x2 (dpsetconstrSub x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (equivEimp2 (x2::(dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6)))))) (x2::(games x0)) (in#Cong (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (games x0) (symeq (games x0) (dpsetconstr x0 x0 (\x4 x5.(forall x6:(powerset (x0 \times x0)) . ((forall x7:((powerset x6) \cap x0) . (forall x8:((powerset x6) \cap x0) . (<<x7,x8>>::x6))) => (<<x4,x5>>::x6))))) (games#Eq x0)) x2 x2 (eqI x2)) (dsetconstrEL (games x0) x1 x2 x3)))).
gamesInd1Lem1:=(\x0 x1 x2.equivEimp1 (x2::((powerset (games x0)) \cap x0)) (x2::(gameset x0)) (in#Cong ((powerset (games x0)) \cap x0) (gameset x0) (symeq (gameset x0) ((powerset (games x0)) \cap x0) (gameset#Eq x0)) x2 x2 (eqI x2)) (binintersectI (powerset (games x0)) x0 x2 (powersetI (games x0) x2 (\x3 x4.dsetconstrEL (games x0) x1 x3 (powersetE {x5:games x0|x1 x5} x2 x3 (binintersectEL (powerset {x5:games x0|x1 x5}) x0 x2 x2) x4))) (binintersectER (powerset {x3:games x0|x1 x3}) x0 x2 x2))).
